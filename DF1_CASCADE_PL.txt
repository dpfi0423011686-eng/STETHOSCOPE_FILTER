package n_bit_int is
	subtype bits16 is integer range -2**15 to 2**15-1;
end package;

library work;
use work.n_bit_int.all;

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_signed.all;

entity DF1_CASCADE_PL is
	port(x_in : in bits16;
        y_out : out bits16;
	     clk : in std_logic);  
end DF1_CASCADE_PL;

architecture fpga of DF1_CASCADE_PL is	

	signal xnm1,xnm2,xnm3,xnm4,xnm5,r1,r2,r3,r4,r5,r6,r7,r8,yn1,yn2,yn3,ynm1,ynm2,y_out1,y_out2: bits16 := 0;
	
begin	
	stage1: process
	begin	
		wait until clk='1';		
		
		xnm1	<=	x_in ; 
		r1		<=	x_in;
		r2		<=	xnm1 ;
		yn1	<=	r1 - r2+15*yn1/16;


	end process stage1;
	y_out1 <= yn1;
	

	-- x_in <= y_out1;	
	
	stage2: process
	begin
		wait  until clk='1';
		
		xnm2	<=	y_out1;
		r3		<=	y_out1;
		xnm3	<=	xnm2;
		r4		<=	xnm2;
		r5		<=	xnm3;
		ynm1	<=	r3 + r5 - 49*yn2/64;
		yn2	<=	ynm1 + 7*yn2/4;


	end process stage2;
	y_out2 <= yn2;	

	-- x_in <= y_out2;	

stage3: process
	begin
		wait  until clk='1';
		xnm4  <= y_out2;
		r6  	<= y_out2;
      xnm5  <= xnm4;
		r7  	<= xnm4;
		r8  	<= xnm5;
      ynm2  <= r6-r8 - 49*yn3/64;
      yn3   <= ynm2 + 7*yn3/4;

	
   end process stage3;
	y_out <= yn3;	
	
end fpga;
